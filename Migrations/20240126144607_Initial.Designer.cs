// <auto-generated />
using System;
using InfotecsExperiment;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfotecsExperiment.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240126144607_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.26");

            modelBuilder.Entity("InfotecsExperiment.Entity.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("InfotecsExperiment.Entity.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvgTimeExperiment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountExperiment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstExperimentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastExperimentDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("MaxScore")
                        .HasColumnType("REAL");

                    b.Property<int>("MaxTimeExperiment")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Median")
                        .HasColumnType("REAL");

                    b.Property<double>("MinScore")
                        .HasColumnType("REAL");

                    b.Property<int>("MinTimeExperiment")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("Results");
                });

            modelBuilder.Entity("InfotecsExperiment.Entity.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("InfotecsExperiment.Entity.Result", b =>
                {
                    b.HasOne("InfotecsExperiment.Entity.File", "File")
                        .WithOne("Result")
                        .HasForeignKey("InfotecsExperiment.Entity.Result", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("InfotecsExperiment.Entity.Value", b =>
                {
                    b.HasOne("InfotecsExperiment.Entity.File", "File")
                        .WithMany("Value")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("InfotecsExperiment.Entity.File", b =>
                {
                    b.Navigation("Result");

                    b.Navigation("Value");
                });
#pragma warning restore 612, 618
        }
    }
}
